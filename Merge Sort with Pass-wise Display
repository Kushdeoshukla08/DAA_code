#include <iostream>
#include <vector>
using namespace std;

void displayArray(const vector<int>& arr) {
    for (int num : arr) {
        cout << num << " ";
    }
    cout << endl;
}

void merge(vector<int>& arr, int left, int mid, int right, int pass) {
    int n1 = mid - left + 1; 
    int n2 = right - mid; 

    vector<int> L(n1), R(n2);

    for (int i = 0; i < n1; i++)
        L[i] = arr[left + i];
    for (int j = 0; j < n2; j++)
        R[j] = arr[mid + 1 + j];

    int i = 0, j = 0, k = left; 

    while (i < n1 && j < n2) {
        if (L[i] <= R[j]) {
            arr[k++] = L[i++];
        } else {
            arr[k++] = R[j++];
        }
    }

    while (i < n1) {
        arr[k++] = L[i++];
    }

    while (j < n2) {
        arr[k++] = R[j++];
    }

    cout << "Pass " << pass << ": ";
    displayArray(arr);
}

void mergeSort(vector<int>& arr, int left, int right, int& pass) {
    if (left < right) {
        int mid = left + (right - left) / 2; 

        mergeSort(arr, left, mid, pass); 
        mergeSort(arr, mid + 1, right, pass); 
        merge(arr, left, mid, right, pass++); 
    }
}

int main() {
    vector<int> arr = {10, 7, 8, 9, 1, 5};
    int pass = 1;
    cout << "Merge Sort Passes:\n";
    mergeSort(arr, 0, arr.size() - 1, pass);
    cout << "Final Sorted Array: ";
    displayArray(arr);
    return 0;
}
